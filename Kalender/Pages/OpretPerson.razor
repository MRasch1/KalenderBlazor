@page "/OpretPerson"
@using Kalender.Data
@inject PersonService personService
@inject NavigationManager NavigationManager

<form>
    <div class="row">
        <div class="col-md-8">
            <div class="for-group">
                <label for="Fornavn" class="control-label">Fornavn</label>
                <input form="Fornavn" class="form-control" @bind="@personObj.Fornavn" />
            </div>
            <div class="for-group">
                <label for="Efternavn" class="control-label">Efternavn</label>
                <input form="Efternavn" class="form-control" @bind="@personObj.Efternavn" />
            </div>
            <div class="for-group">
                <label for="Fødselsdato" class="control-label">Fødselsdato</label>
                <input type="date" id="Fødselsdato" name="trip-start"  form="Fødselsdato" class="form-control" @bind="@personObj.Fødselsdato" />
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-md-4">
            <div class="form-group">
                <input type="button" class="btn btn-primary" @onclick="@CreateNewPerson" value="Save Person" />
                <input type="button" class="btn btn-danger" @onclick="@Cancel" value="Cancel" />
            </div>
        </div>
    </div>
</form>

@if (personObj.Fødselsdato != minimumAge)
{
    <p class="text-danger">@errorMessage</p>
}



@code {
    Person personObj = new Person { Fødselsdato = DateTime.Now };
    DateTime minimumAge = DateTime.Now.AddYears(-18);
    private string errorMessage;

    protected async void CreateNewPerson()
    {
        if (personObj.Fødselsdato < minimumAge)
        {
            await personService.AddNewPerson(personObj);
            NavigationManager.NavigateTo("calendar");
        }
        else
        {
            errorMessage = "The person has to be 18 and above!";
        }
    }

    protected void Cancel()
    {
        NavigationManager.NavigateTo("calendar");
    }

}